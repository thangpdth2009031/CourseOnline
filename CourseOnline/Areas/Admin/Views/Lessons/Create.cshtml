@model CourseOnline.Models.Lesson

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="page-wrapper">
    <div class="container-fluid">
        <div class="row">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(model => model.TopicId, "TopicId", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("TopicId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TopicId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.LessonName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.LessonName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LessonName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.UrlFile, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.UrlFile, new { htmlAttributes = new { @class = "form-control", @id = "txtVideo" }, id = "txtVideo" })
                            <span class="input-group-addon" onclick="ChooseImg()">
                                <i class="fa fa-upload fa-lg"></i>
                            </span>
                            @Html.ValidationMessageFor(model => model.UrlFile, "", new { @class = "text-danger" })
                        </div>
                        <div style="width:500px;">
                            <video style="width:100%;padding-top: 10px;" controls class="d-none" id="videoTag">
                                <source id="urlVideo" src="#" type="video/mp4">
                                Your browser does not support HTML5 video.
                            </video>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TimeVideo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.TimeVideo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TimeVideo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }
            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        function ChooseImg() {
            const finder = new CKFinder();
            finder.selectActionFunction = function (fileUrl) {
                $("#urlVideo").attr("src", fileUrl);
                $("#txtVideo").val(fileUrl);
                const vid = $("video")[0];
                vid.load();
                vid.addEventListener('loadeddata', function () {
                    $("#videoTag").attr('class', 'd-block');
                    getTimeVideo();
                }, false);
            }
            finder.popup();

        }
        function getTimeVideo() {
            const vid = $("video")[0];
            const time = vid.duration;
            if (Number(time) > 0) {
                $("#TimeVideo").val(time);
            }
        }
    </script>
    }