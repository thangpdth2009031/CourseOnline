@model CourseOnline.Models.Category

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

<div class="page-wrapper">
    <div class="container-fluid">
        <div class="row">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>Category</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.ParentId, "ParentId", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("ParentId", null, "--PerenId--", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ParentId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control", @id = "txtImage" }, id = "txtImage" })
                            <span class="input-group-addon" onclick="ChooseImg()">
                                <i class="fa fa-upload fa-lg"></i>
                            </span>
                        </div>
                        <img class="img img-thumbnail" id="Img" src="" style="height: 200px;width:200px" />
                        @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ImageSlide, htmlAttributes: new { @class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ImageSlide, new { htmlAttributes = new { @class = "form-control", @id = "txtImageSlide" }, id = "txtImageSlide" })
                            <span class="input-group-addon" onclick="ChooseImageSlide()">
                                <i class="fa fa-upload fa-lg"></i>
                            </span>
                        </div>
                        <img class="img img-thumbnail" id="ImageSlide" src="" style="height: 200px;width:200px" />
                        @Html.ValidationMessageFor(model => model.ImageSlide, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.NumberOfCourse, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.NumberOfCourse, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NumberOfCourse, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }
            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function ChooseImg() {            
            const finder = new CKFinder();
            finder.selectActionFunction = function (fileUrl) {
                $("#Img").attr("src", fileUrl);
                $("#txtImage").val(fileUrl);
            }
            finder.popup();
        }
        function ChooseImageSlide() {
            const finder = new CKFinder();
            finder.selectActionFunction = function (fileUrl) {
                $("#ImageSlide").attr("src", fileUrl);
                $("#txtImageSlide").val(fileUrl);
            }
            finder.popup();
        }
    </script>
}}
